#pragma version 8
intcblock 0 1 8 4096
bytecblock 0x656c656d656e7473 0x736f727465645f696e7473
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xe377bfd5 // "add_int(uint64)uint64[]"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0x3ff8fbae // "box_create_test()void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub boxcreatetest_3
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub addint_1
store 0
pushbytes 0x151f7c75 // 0x151f7c75
load 0
concat
log
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// max
max_0:
proto 2 1
frame_dig -2
frame_dig -1
>
bnz max_0_l2
frame_dig -1
b max_0_l3
max_0_l2:
frame_dig -2
max_0_l3:
retsub

// add_int
addint_1:
proto 1 1
pushbytes 0x // ""
bytec_1 // "sorted_ints"
box_get
store 2
store 1
intc_0 // 0
intc_1 // 1
||
assert
bytec_0 // "elements"
app_global_get
intc_0 // 0
==
bnz addint_1_l2
frame_dig -1
load 1
intc_0 // 0
bytec_0 // "elements"
app_global_get
intc_1 // 1
-
callsub binarysearch_2
intc_2 // 8
*
b addint_1_l3
addint_1_l2:
intc_0 // 0
addint_1_l3:
store 3
bytec_1 // "sorted_ints"
load 1
intc_0 // 0
load 3
extract3
frame_dig -1
itob
concat
load 1
load 3
intc_3 // 4096
load 3
-
intc_2 // 8
-
extract3
concat
box_put
bytec_0 // "elements"
bytec_0 // "elements"
app_global_get
intc_1 // 1
+
app_global_put
global OpcodeBudget
itob
log
pushint 10 // 10
itob
extract 6 0
bytec_1 // "sorted_ints"
intc_0 // 0
intc_2 // 8
pushint 10 // 10
*
box_extract
concat
frame_bury 0
retsub

// binary_search
binarysearch_2:
proto 4 1
frame_dig -2
frame_dig -1
>
bnz binarysearch_2_l11
frame_dig -2
frame_dig -1
==
bnz binarysearch_2_l7
frame_dig -2
frame_dig -1
+
pushint 2 // 2
/
store 4
frame_dig -3
load 4
intc_2 // 8
*
extract_uint64
store 5
load 5
frame_dig -4
<
bnz binarysearch_2_l6
load 5
frame_dig -4
>
bnz binarysearch_2_l5
load 4
b binarysearch_2_l12
binarysearch_2_l5:
frame_dig -4
frame_dig -3
frame_dig -2
intc_1 // 1
load 4
callsub max_0
intc_1 // 1
-
load 4
cover 4
load 5
cover 4
callsub binarysearch_2
cover 2
store 5
store 4
b binarysearch_2_l12
binarysearch_2_l6:
frame_dig -4
frame_dig -3
load 4
intc_1 // 1
+
frame_dig -1
load 4
cover 4
load 5
cover 4
callsub binarysearch_2
cover 2
store 5
store 4
b binarysearch_2_l12
binarysearch_2_l7:
frame_dig -2
frame_dig -3
frame_dig -2
intc_2 // 8
*
extract_uint64
frame_dig -4
>
bnz binarysearch_2_l10
intc_1 // 1
binarysearch_2_l9:
+
retsub
binarysearch_2_l10:
intc_0 // 0
b binarysearch_2_l9
binarysearch_2_l11:
frame_dig -2
retsub
binarysearch_2_l12:
retsub

// box_create_test
boxcreatetest_3:
proto 0 0
bytec_1 // "sorted_ints"
intc_3 // 4096
box_create
assert
bytec_0 // "elements"
intc_0 // 0
app_global_put
retsub