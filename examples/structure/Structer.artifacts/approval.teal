#pragma version 8
intcblock 0 1
bytecblock 0x00 0x 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xa4e8d795 // "place_order(uint8,(string,uint16))void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x3fca3a49 // "read_item(uint8)(string,uint16)"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xf4b057d9 // "increase_quantity(uint8)(string,uint16)"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub increasequantity_3
store 3
bytec_2 // 0x151f7c75
load 3
concat
log
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub readitem_2
store 2
bytec_2 // 0x151f7c75
load 2
concat
log
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 0
txna ApplicationArgs 2
store 1
load 0
load 1
callsub placeorder_1
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
txn OnCompletion
intc_1 // OptIn
==
bnz main_l11
err
main_l11:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_0
intc_1 // 1
return
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// opt_in
optin_0:
proto 0 0
retsub

// place_order
placeorder_1:
proto 2 0
txn Sender
bytec_0 // 0x00
intc_0 // 0
frame_dig -2
setbyte
frame_dig -1
app_local_put
retsub

// read_item
readitem_2:
proto 1 1
bytec_1 // ""
txn Sender
bytec_0 // 0x00
intc_0 // 0
frame_dig -1
setbyte
app_local_get
frame_bury 0
retsub

// increase_quantity
increasequantity_3:
proto 1 1
bytec_1 // ""
dup
intc_0 // 0
bytec_1 // ""
intc_0 // 0
dup
bytec_1 // ""
dup
txn Sender
bytec_0 // 0x00
intc_0 // 0
frame_dig -1
setbyte
app_local_get
frame_bury 1
frame_dig 1
pushint 2 // 2
extract_uint16
frame_bury 2
frame_dig 2
intc_1 // 1
+
frame_bury 2
frame_dig 2
pushint 65536 // 65536
<
assert
frame_dig 1
frame_dig 1
intc_0 // 0
extract_uint16
dig 1
len
substring3
frame_bury 3
frame_dig 3
frame_bury 7
frame_dig 7
frame_bury 6
pushint 4 // 4
frame_bury 4
frame_dig 4
itob
extract 6 0
frame_dig 2
itob
extract 6 0
concat
frame_dig 6
concat
frame_bury 1
txn Sender
bytec_0 // 0x00
intc_0 // 0
frame_dig -1
setbyte
frame_dig 1
app_local_put
frame_dig 1
frame_bury 0
retsub