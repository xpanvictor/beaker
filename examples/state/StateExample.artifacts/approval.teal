#pragma version 8
intcblock 0 127 1
bytecblock 0x151f7c75 0x 0x00 0x6465636c617265645f676c6f62616c5f76616c7565 0x6465636c617265645f6c6f63616c5f76616c7565 0x000102030405060708090a0b0c0d0e0f 0x000102
txn NumAppArgs
intc_0 // 0
==
bnz main_l28
txna ApplicationArgs 0
pushbytes 0xa7362a68 // "write_local_blob(string)void"
==
bnz main_l27
txna ApplicationArgs 0
pushbytes 0x25155243 // "read_local_blob()byte[]"
==
bnz main_l26
txna ApplicationArgs 0
pushbytes 0x9fda8c4c // "write_global_blob(string)void"
==
bnz main_l25
txna ApplicationArgs 0
pushbytes 0x8fed2551 // "read_global_blob()byte[]"
==
bnz main_l24
txna ApplicationArgs 0
pushbytes 0xa3a24001 // "set_global_state_val(string)void"
==
bnz main_l23
txna ApplicationArgs 0
pushbytes 0x5835fee6 // "get_global_state_val()string"
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x1615ef25 // "set_reserved_global_state_val(uint8,uint64)void"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0xddfde386 // "get_reserved_global_state_val(uint8)uint64"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x93aa0987 // "set_local_state_val(uint64)void"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0x4df504d8 // "incr_local_state_val(uint64)void"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x2abf6341 // "get_local_state_val()uint64"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x568b3159 // "set_reserved_local_state_val(uint8,string)void"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0xd3aa7675 // "get_reserved_local_state_val(uint8)string"
==
bnz main_l15
err
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub getreservedlocalstateval_22
store 9
bytec_0 // 0x151f7c75
load 9
concat
log
intc_2 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 7
txna ApplicationArgs 2
store 8
load 7
load 8
callsub setreservedlocalstateval_21
intc_2 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getlocalstateval_20
store 6
bytec_0 // 0x151f7c75
load 6
itob
concat
log
intc_2 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub incrlocalstateval_19
intc_2 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub setlocalstateval_18
intc_2 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub getreservedglobalstateval_17
store 5
bytec_0 // 0x151f7c75
load 5
itob
concat
log
intc_2 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 3
txna ApplicationArgs 2
btoi
store 4
load 3
load 4
callsub setreservedglobalstateval_16
intc_2 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getglobalstateval_15
store 2
bytec_0 // 0x151f7c75
load 2
concat
log
intc_2 // 1
return
main_l23:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub setglobalstateval_14
intc_2 // 1
return
main_l24:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readglobalblob_13
store 1
bytec_0 // 0x151f7c75
load 1
concat
log
intc_2 // 1
return
main_l25:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub writeglobalblob_12
intc_2 // 1
return
main_l26:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readlocalblob_11
store 0
bytec_0 // 0x151f7c75
load 0
concat
log
intc_2 // 1
return
main_l27:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub writelocalblob_10
intc_2 // 1
return
main_l28:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l32
txn OnCompletion
intc_2 // OptIn
==
bnz main_l31
err
main_l31:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_9
intc_2 // 1
return
main_l32:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_8
intc_2 // 1
return

// zero_impl
zeroimpl_0:
proto 0 0
intc_1 // 127
bzero
pushint 16 // 16

    zero_loop:
        int 1
        -               // ["00"*page_size, key-1]
        dup2            // ["00"*page_size, key, "00"*page_size, key]
        itob            // ["00"*page_size, key, "00"*page_size, itob(key)]
        extract 7 1     // ["00"*page_size, key, "00"*page_size, itob(key)[-1]]
        swap            // ["00"*page_size, key, itob(key)[-1], "00"*page_size]
        app_global_put  // ["00"*page_size, key]  (removes top 2 elements)
        dup             // ["00"*page_size, key-1, key-1]
        bnz zero_loop   // start loop over if key-1>0
        pop
        pop             // take extra junk off the stack
        retsub
    callsub zero_loop
            
retsub

// read_impl
readimpl_1:
proto 2 1
bytec_1 // ""
store 27
frame_dig -2
intc_1 // 127
/
store 26
readimpl_1_l1:
load 26
frame_dig -1
intc_1 // 127
/
<=
bz readimpl_1_l9
load 26
frame_dig -2
intc_1 // 127
/
==
bnz readimpl_1_l8
intc_0 // 0
readimpl_1_l4:
store 28
load 26
frame_dig -1
intc_1 // 127
/
==
bnz readimpl_1_l7
intc_1 // 127
readimpl_1_l6:
store 29
load 27
bytec 5 // 0x000102030405060708090a0b0c0d0e0f
load 26
intc_2 // 1
extract3
app_global_get
load 28
load 29
substring3
concat
store 27
load 26
intc_2 // 1
+
store 26
b readimpl_1_l1
readimpl_1_l7:
frame_dig -1
intc_1 // 127
%
b readimpl_1_l6
readimpl_1_l8:
frame_dig -2
intc_1 // 127
%
b readimpl_1_l4
readimpl_1_l9:
load 27
retsub

// write_impl
writeimpl_2:
proto 2 0
intc_0 // 0
store 24
frame_dig -2
intc_1 // 127
/
store 21
writeimpl_2_l1:
load 21
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
/
<=
bz writeimpl_2_l12
load 21
frame_dig -2
intc_1 // 127
/
==
bnz writeimpl_2_l11
intc_0 // 0
writeimpl_2_l4:
store 22
load 21
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
/
==
bnz writeimpl_2_l10
intc_1 // 127
writeimpl_2_l6:
store 23
bytec 5 // 0x000102030405060708090a0b0c0d0e0f
load 21
intc_2 // 1
extract3
load 23
intc_1 // 127
!=
load 22
intc_0 // 0
!=
||
bnz writeimpl_2_l9
intc_1 // 127
store 25
frame_dig -1
load 24
intc_1 // 127
extract3
writeimpl_2_l8:
app_global_put
load 24
load 25
+
store 24
load 21
intc_2 // 1
+
store 21
b writeimpl_2_l1
writeimpl_2_l9:
load 23
load 22
-
store 25
bytec 5 // 0x000102030405060708090a0b0c0d0e0f
load 21
intc_2 // 1
extract3
app_global_get
intc_0 // 0
load 22
substring3
frame_dig -1
load 24
load 25
extract3
concat
bytec 5 // 0x000102030405060708090a0b0c0d0e0f
load 21
intc_2 // 1
extract3
app_global_get
load 23
intc_1 // 127
substring3
concat
b writeimpl_2_l8
writeimpl_2_l10:
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
%
b writeimpl_2_l6
writeimpl_2_l11:
frame_dig -2
intc_1 // 127
%
b writeimpl_2_l4
writeimpl_2_l12:
retsub

// zero_impl
zeroimpl_3:
proto 1 0
frame_dig -1
bytec_2 // 0x00
intc_1 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x01 // 0x01
intc_1 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x02 // 0x02
intc_1 // 127
bzero
app_local_put
retsub

// read_impl
readimpl_4:
proto 3 1
bytec_1 // ""
store 18
frame_dig -2
intc_1 // 127
/
store 17
readimpl_4_l1:
load 17
frame_dig -1
intc_1 // 127
/
<=
bz readimpl_4_l9
load 17
frame_dig -2
intc_1 // 127
/
==
bnz readimpl_4_l8
intc_0 // 0
readimpl_4_l4:
store 19
load 17
frame_dig -1
intc_1 // 127
/
==
bnz readimpl_4_l7
intc_1 // 127
readimpl_4_l6:
store 20
load 18
frame_dig -3
bytec 6 // 0x000102
load 17
intc_2 // 1
extract3
app_local_get
load 19
load 20
substring3
concat
store 18
load 17
intc_2 // 1
+
store 17
b readimpl_4_l1
readimpl_4_l7:
frame_dig -1
intc_1 // 127
%
b readimpl_4_l6
readimpl_4_l8:
frame_dig -2
intc_1 // 127
%
b readimpl_4_l4
readimpl_4_l9:
load 18
retsub

// write_impl
writeimpl_5:
proto 3 0
intc_0 // 0
store 15
frame_dig -2
intc_1 // 127
/
store 12
writeimpl_5_l1:
load 12
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
/
<=
bz writeimpl_5_l12
load 12
frame_dig -2
intc_1 // 127
/
==
bnz writeimpl_5_l11
intc_0 // 0
writeimpl_5_l4:
store 13
load 12
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
/
==
bnz writeimpl_5_l10
intc_1 // 127
writeimpl_5_l6:
store 14
frame_dig -3
bytec 6 // 0x000102
load 12
intc_2 // 1
extract3
load 14
intc_1 // 127
!=
load 13
intc_0 // 0
!=
||
bnz writeimpl_5_l9
intc_1 // 127
store 16
frame_dig -1
load 15
intc_1 // 127
extract3
writeimpl_5_l8:
app_local_put
load 15
load 16
+
store 15
load 12
intc_2 // 1
+
store 12
b writeimpl_5_l1
writeimpl_5_l9:
load 14
load 13
-
store 16
frame_dig -3
bytec 6 // 0x000102
load 12
intc_2 // 1
extract3
app_local_get
intc_0 // 0
load 13
substring3
frame_dig -1
load 15
load 16
extract3
concat
frame_dig -3
bytec 6 // 0x000102
load 12
intc_2 // 1
extract3
app_local_get
load 14
intc_1 // 127
substring3
concat
b writeimpl_5_l8
writeimpl_5_l10:
frame_dig -2
frame_dig -1
len
+
intc_1 // 127
%
b writeimpl_5_l6
writeimpl_5_l11:
frame_dig -2
intc_1 // 127
%
b writeimpl_5_l4
writeimpl_5_l12:
retsub

// prefix_key_gen
prefixkeygen_6:
proto 1 1
pushbytes 0x72657365727665645f676c6f62616c5f76616c7565 // "reserved_global_value"
frame_dig -1
concat
retsub

// prefix_key_gen
prefixkeygen_7:
proto 1 1
pushbytes 0x72657365727665645f6c6f63616c5f76616c7565 // "reserved_local_value"
frame_dig -1
concat
retsub

// create
create_8:
proto 0 0
intc_0 // 0
bytec_3 // "declared_global_value"
app_global_get_ex
store 11
store 10
load 11
!
assert
bytec_3 // "declared_global_value"
pushbytes 0x41206465636c617265642073746174652076616c756520746861742069732070726f74656374656420776974682074686520607374617469636020666c6167 // "A declared state value that is protected with the `static` flag"
app_global_put
callsub zeroimpl_0
retsub

// opt_in
optin_9:
proto 0 0
txn Sender
bytec 4 // "declared_local_value"
intc_2 // 1
app_local_put
txn Sender
callsub zeroimpl_3
retsub

// write_local_blob
writelocalblob_10:
proto 1 0
txn Sender
intc_0 // 0
frame_dig -1
extract 2 0
callsub writeimpl_5
retsub

// read_local_blob
readlocalblob_11:
proto 0 1
bytec_1 // ""
txn Sender
intc_0 // 0
pushint 381 // 381
intc_2 // 1
-
callsub readimpl_4
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// write_global_blob
writeglobalblob_12:
proto 1 0
intc_0 // 0
frame_dig -1
extract 2 0
callsub writeimpl_2
retsub

// read_global_blob
readglobalblob_13:
proto 0 1
bytec_1 // ""
intc_0 // 0
pushint 2032 // 2032
intc_2 // 1
-
callsub readimpl_1
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// set_global_state_val
setglobalstateval_14:
proto 1 0
intc_0 // 0
bytec_3 // "declared_global_value"
app_global_get_ex
store 31
store 30
load 31
!
assert
bytec_3 // "declared_global_value"
frame_dig -1
extract 2 0
app_global_put
retsub

// get_global_state_val
getglobalstateval_15:
proto 0 1
bytec_1 // ""
bytec_3 // "declared_global_value"
app_global_get
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// set_reserved_global_state_val
setreservedglobalstateval_16:
proto 2 0
bytec_2 // 0x00
intc_0 // 0
frame_dig -2
setbyte
callsub prefixkeygen_6
frame_dig -1
app_global_put
retsub

// get_reserved_global_state_val
getreservedglobalstateval_17:
proto 1 1
intc_0 // 0
bytec_2 // 0x00
intc_0 // 0
frame_dig -1
setbyte
callsub prefixkeygen_6
app_global_get
frame_bury 0
retsub

// set_local_state_val
setlocalstateval_18:
proto 1 0
txn Sender
bytec 4 // "declared_local_value"
frame_dig -1
app_local_put
retsub

// incr_local_state_val
incrlocalstateval_19:
proto 1 0
txn Sender
bytec 4 // "declared_local_value"
txn Sender
bytec 4 // "declared_local_value"
app_local_get
frame_dig -1
+
app_local_put
retsub

// get_local_state_val
getlocalstateval_20:
proto 0 1
intc_0 // 0
txn Sender
bytec 4 // "declared_local_value"
app_local_get
frame_bury 0
retsub

// set_reserved_local_state_val
setreservedlocalstateval_21:
proto 2 0
txn Sender
bytec_2 // 0x00
intc_0 // 0
frame_dig -2
setbyte
callsub prefixkeygen_7
frame_dig -1
extract 2 0
app_local_put
retsub

// get_reserved_local_state_val
getreservedlocalstateval_22:
proto 1 1
bytec_1 // ""
txn Sender
bytec_2 // 0x00
intc_0 // 0
frame_dig -1
setbyte
callsub prefixkeygen_7
app_local_get
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub